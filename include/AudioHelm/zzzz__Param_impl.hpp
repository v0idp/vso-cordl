#pragma once
// IWYU pragma private; include "AudioHelm/Param.hpp"
#include "AudioHelm/zzzz__Param_def.hpp"
// Ctor Parameters [CppParam { name: "value__", ty: "int32_t", modifiers: "", def_value: Some("{}") }]
constexpr ::AudioHelm::Param::Param(int32_t  value__) noexcept  {
this->value__ = value__;
}
// Ctor Parameters []
constexpr ::AudioHelm::Param::Param()   {
}
constexpr ::AudioHelm::Param  AudioHelm::Param::kNone{static_cast<int32_t>(0x0)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kAmplitudeAttack{static_cast<int32_t>(0x1)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kAmplitudeDecay{static_cast<int32_t>(0x2)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kAmplitudeSustain{static_cast<int32_t>(0x3)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kAmplitudeRelease{static_cast<int32_t>(0x4)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpFrequency{static_cast<int32_t>(0x5)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpGate{static_cast<int32_t>(0x6)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpOctaves{static_cast<int32_t>(0x7)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpOn{static_cast<int32_t>(0x8)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpPattern{static_cast<int32_t>(0x9)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpSync{static_cast<int32_t>(0xa)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kArpTempo{static_cast<int32_t>(0xb)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kCrossMod{static_cast<int32_t>(0xd)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterCutoff{static_cast<int32_t>(0xe)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelayDryWet{static_cast<int32_t>(0xf)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelayFeedback{static_cast<int32_t>(0x10)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelayFrequency{static_cast<int32_t>(0x11)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelayOn{static_cast<int32_t>(0x12)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelaySync{static_cast<int32_t>(0x13)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDelayTempo{static_cast<int32_t>(0x14)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDistortionOn{static_cast<int32_t>(0x15)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDistortionType{static_cast<int32_t>(0x16)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDistortionDrive{static_cast<int32_t>(0x17)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kDistortionMix{static_cast<int32_t>(0x18)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterAttack{static_cast<int32_t>(0x19)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterDecay{static_cast<int32_t>(0x1a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterEnvelopeDepth{static_cast<int32_t>(0x1b)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterRelease{static_cast<int32_t>(0x1c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterSustain{static_cast<int32_t>(0x1d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterDrive{static_cast<int32_t>(0x1f)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterBlend{static_cast<int32_t>(0x20)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterStyle{static_cast<int32_t>(0x22)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterShelf{static_cast<int32_t>(0x23)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFilterOn{static_cast<int32_t>(0x24)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFormantOn{static_cast<int32_t>(0x25)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFormantX{static_cast<int32_t>(0x26)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kFormantY{static_cast<int32_t>(0x27)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kKeytrack{static_cast<int32_t>(0x28)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kLegato{static_cast<int32_t>(0x29)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kModAttack{static_cast<int32_t>(0x2a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kModDecay{static_cast<int32_t>(0x2b)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kModRelease{static_cast<int32_t>(0x2c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kModSustain{static_cast<int32_t>(0x2d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Amplitude{static_cast<int32_t>(0x2e)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Frequency{static_cast<int32_t>(0x2f)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Retrigger{static_cast<int32_t>(0x30)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Sync{static_cast<int32_t>(0x31)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Tempo{static_cast<int32_t>(0x32)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo1Waveform{static_cast<int32_t>(0x33)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Amplitude{static_cast<int32_t>(0x34)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Frequency{static_cast<int32_t>(0x35)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Retrigger{static_cast<int32_t>(0x36)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Sync{static_cast<int32_t>(0x37)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Tempo{static_cast<int32_t>(0x38)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kMonoLfo2Waveform{static_cast<int32_t>(0x39)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kNoiseVolume{static_cast<int32_t>(0x3a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kNumSteps{static_cast<int32_t>(0x3b)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1Transpose{static_cast<int32_t>(0x3c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1Tune{static_cast<int32_t>(0x3d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1UnisonDetune{static_cast<int32_t>(0x3e)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1UnisonVoices{static_cast<int32_t>(0x3f)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1Volume{static_cast<int32_t>(0x40)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1Waveform{static_cast<int32_t>(0x41)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2Transpose{static_cast<int32_t>(0x42)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2Tune{static_cast<int32_t>(0x43)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2UnisonDetune{static_cast<int32_t>(0x44)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2UnisonVoices{static_cast<int32_t>(0x45)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2Volume{static_cast<int32_t>(0x46)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2Waveform{static_cast<int32_t>(0x47)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOscFeedbackAmount{static_cast<int32_t>(0x48)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOscFeedbackTranspose{static_cast<int32_t>(0x49)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOscFeedbackTune{static_cast<int32_t>(0x4a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPitchBendRange{static_cast<int32_t>(0x4c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyLfoAmplitude{static_cast<int32_t>(0x4d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyLfoFrequency{static_cast<int32_t>(0x4e)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyLfoSync{static_cast<int32_t>(0x4f)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyLfoTempo{static_cast<int32_t>(0x50)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyLfoWaveform{static_cast<int32_t>(0x51)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPolyphony{static_cast<int32_t>(0x52)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPortamento{static_cast<int32_t>(0x53)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kPortamentoType{static_cast<int32_t>(0x54)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kResonance{static_cast<int32_t>(0x55)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kReverbDamping{static_cast<int32_t>(0x56)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kReverbDryWet{static_cast<int32_t>(0x57)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kReverbFeedback{static_cast<int32_t>(0x58)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kReverbOn{static_cast<int32_t>(0x59)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStepFrequency{static_cast<int32_t>(0x5a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStepSequencerRetrigger{static_cast<int32_t>(0x7b)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStepSequencerSync{static_cast<int32_t>(0x7c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStepSequencerTempo{static_cast<int32_t>(0x7d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStepSmoothing{static_cast<int32_t>(0x7e)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterFrequency{static_cast<int32_t>(0x7f)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterOn{static_cast<int32_t>(0x80)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterResampleFrequency{static_cast<int32_t>(0x81)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterResampleSync{static_cast<int32_t>(0x82)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterResampleTempo{static_cast<int32_t>(0x83)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterSoftness{static_cast<int32_t>(0x84)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterSync{static_cast<int32_t>(0x85)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kStutterTempo{static_cast<int32_t>(0x86)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kSubShuffle{static_cast<int32_t>(0x87)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kSubOctave{static_cast<int32_t>(0x88)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kSubVolume{static_cast<int32_t>(0x89)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kSubWaveform{static_cast<int32_t>(0x8a)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc1UnisonHarmonize{static_cast<int32_t>(0x8b)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kOsc2UnisonHarmonize{static_cast<int32_t>(0x8c)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kVelocityTrack{static_cast<int32_t>(0x8d)};
constexpr ::AudioHelm::Param  AudioHelm::Param::kVolume{static_cast<int32_t>(0x8e)};
